// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/helloworld.proto

package helloworld

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定义用户注册类型
type UserRegisterType int32

const (
	UserRegisterType_Unknow         UserRegisterType = 0
	UserRegisterType_GuestRegister  UserRegisterType = 1
	UserRegisterType_NormalRegister UserRegisterType = 2
)

var UserRegisterType_name = map[int32]string{
	0: "Unknow",
	1: "GuestRegister",
	2: "NormalRegister",
}

var UserRegisterType_value = map[string]int32{
	"Unknow":         0,
	"GuestRegister":  1,
	"NormalRegister": 2,
}

func (x UserRegisterType) String() string {
	return proto.EnumName(UserRegisterType_name, int32(x))
}

func (UserRegisterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{0}
}

// 定义渠道类型
type GameChannelType int32

const (
	GameChannelType_UNKNOW  GameChannelType = 0
	GameChannelType_IOS     GameChannelType = 1
	GameChannelType_Android GameChannelType = 2
	GameChannelType_VIVO    GameChannelType = 3
	GameChannelType_OPPO    GameChannelType = 3
)

var GameChannelType_name = map[int32]string{
	0: "UNKNOW",
	1: "IOS",
	2: "Android",
	3: "VIVO",
	// Duplicate value: 3: "OPPO",
}

var GameChannelType_value = map[string]int32{
	"UNKNOW":  0,
	"IOS":     1,
	"Android": 2,
	"VIVO":    3,
	"OPPO":    3,
}

func (x GameChannelType) String() string {
	return proto.EnumName(GameChannelType_name, int32(x))
}

func (GameChannelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{1}
}

type CanUpdateRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanUpdateRequest) Reset()         { *m = CanUpdateRequest{} }
func (m *CanUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*CanUpdateRequest) ProtoMessage()    {}
func (*CanUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{0}
}

func (m *CanUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanUpdateRequest.Unmarshal(m, b)
}
func (m *CanUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanUpdateRequest.Marshal(b, m, deterministic)
}
func (m *CanUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanUpdateRequest.Merge(m, src)
}
func (m *CanUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_CanUpdateRequest.Size(m)
}
func (m *CanUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CanUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CanUpdateRequest proto.InternalMessageInfo

func (m *CanUpdateRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type CanUpdateReply struct {
	CanUpdate            bool     `protobuf:"varint,1,opt,name=can_update,json=canUpdate,proto3" json:"can_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanUpdateReply) Reset()         { *m = CanUpdateReply{} }
func (m *CanUpdateReply) String() string { return proto.CompactTextString(m) }
func (*CanUpdateReply) ProtoMessage()    {}
func (*CanUpdateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{1}
}

func (m *CanUpdateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanUpdateReply.Unmarshal(m, b)
}
func (m *CanUpdateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanUpdateReply.Marshal(b, m, deterministic)
}
func (m *CanUpdateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanUpdateReply.Merge(m, src)
}
func (m *CanUpdateReply) XXX_Size() int {
	return xxx_messageInfo_CanUpdateReply.Size(m)
}
func (m *CanUpdateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CanUpdateReply.DiscardUnknown(m)
}

var xxx_messageInfo_CanUpdateReply proto.InternalMessageInfo

func (m *CanUpdateReply) GetCanUpdate() bool {
	if m != nil {
		return m.CanUpdate
	}
	return false
}

type CanSetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanSetRequest) Reset()         { *m = CanSetRequest{} }
func (m *CanSetRequest) String() string { return proto.CompactTextString(m) }
func (*CanSetRequest) ProtoMessage()    {}
func (*CanSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{2}
}

func (m *CanSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanSetRequest.Unmarshal(m, b)
}
func (m *CanSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanSetRequest.Marshal(b, m, deterministic)
}
func (m *CanSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanSetRequest.Merge(m, src)
}
func (m *CanSetRequest) XXX_Size() int {
	return xxx_messageInfo_CanSetRequest.Size(m)
}
func (m *CanSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CanSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CanSetRequest proto.InternalMessageInfo

type CanSetReply struct {
	CanSet               bool     `protobuf:"varint,1,opt,name=can_set,json=canSet,proto3" json:"can_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanSetReply) Reset()         { *m = CanSetReply{} }
func (m *CanSetReply) String() string { return proto.CompactTextString(m) }
func (*CanSetReply) ProtoMessage()    {}
func (*CanSetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{3}
}

func (m *CanSetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanSetReply.Unmarshal(m, b)
}
func (m *CanSetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanSetReply.Marshal(b, m, deterministic)
}
func (m *CanSetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanSetReply.Merge(m, src)
}
func (m *CanSetReply) XXX_Size() int {
	return xxx_messageInfo_CanSetReply.Size(m)
}
func (m *CanSetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CanSetReply.DiscardUnknown(m)
}

var xxx_messageInfo_CanSetReply proto.InternalMessageInfo

func (m *CanSetReply) GetCanSet() bool {
	if m != nil {
		return m.CanSet
	}
	return false
}

type List struct {
	Id                   []int32  `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{4}
}

func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (m *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(m, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

// The request message containing the user's name
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{5}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_debda25970f7252f, []int{6}
}

func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (m *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(m, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("helloworld.UserRegisterType", UserRegisterType_name, UserRegisterType_value)
	proto.RegisterEnum("helloworld.GameChannelType", GameChannelType_name, GameChannelType_value)
	proto.RegisterType((*CanUpdateRequest)(nil), "helloworld.CanUpdateRequest")
	proto.RegisterType((*CanUpdateReply)(nil), "helloworld.CanUpdateReply")
	proto.RegisterType((*CanSetRequest)(nil), "helloworld.CanSetRequest")
	proto.RegisterType((*CanSetReply)(nil), "helloworld.CanSetReply")
	proto.RegisterType((*List)(nil), "helloworld.list")
	proto.RegisterType((*HelloRequest)(nil), "helloworld.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "helloworld.HelloReply")
}

func init() { proto.RegisterFile("pb/helloworld.proto", fileDescriptor_debda25970f7252f) }

var fileDescriptor_debda25970f7252f = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6b, 0xdb, 0x30,
	0x14, 0xc6, 0x6b, 0x27, 0xb3, 0x9d, 0xd7, 0x35, 0xd5, 0xde, 0xa0, 0xf5, 0xcc, 0x06, 0x45, 0x87,
	0x52, 0x7a, 0x48, 0x61, 0xbb, 0xf6, 0x32, 0x42, 0xc9, 0x4a, 0x21, 0x2e, 0xce, 0xd2, 0x1d, 0x87,
	0x1a, 0x3f, 0x5a, 0x33, 0x59, 0xf6, 0x24, 0x85, 0xe2, 0xff, 0x71, 0x7f, 0xd4, 0x90, 0x17, 0x7b,
	0xee, 0xe8, 0x6e, 0xd2, 0xf7, 0xfd, 0x3e, 0xe9, 0x49, 0xef, 0xc1, 0xdb, 0xfa, 0xfe, 0xe2, 0x91,
	0xa4, 0xac, 0x9e, 0x2a, 0x2d, 0xf3, 0x59, 0xad, 0x2b, 0x5b, 0x21, 0xfc, 0x55, 0xf8, 0x0c, 0xd8,
	0x5c, 0xa8, 0x75, 0x9d, 0x0b, 0x4b, 0x19, 0xfd, 0xdc, 0x92, 0xb1, 0x98, 0x40, 0xb4, 0x35, 0xa4,
	0x95, 0x28, 0x29, 0xf6, 0x4e, 0xbc, 0xb3, 0x49, 0xd6, 0xef, 0xf9, 0x05, 0x4c, 0x07, 0x7c, 0x2d,
	0x1b, 0xfc, 0x00, 0xb0, 0x11, 0xea, 0xfb, 0xb6, 0x95, 0x5a, 0x3e, 0xca, 0x26, 0x9b, 0x8e, 0xe1,
	0x87, 0x70, 0x30, 0x17, 0x6a, 0x45, 0x76, 0x77, 0x3a, 0x3f, 0x85, 0xfd, 0x4e, 0x70, 0xf1, 0x63,
	0x08, 0x5d, 0xdc, 0x90, 0xdd, 0x65, 0x83, 0x4d, 0xeb, 0xf2, 0x23, 0x18, 0xcb, 0xc2, 0x58, 0x9c,
	0x82, 0x5f, 0xe4, 0xb1, 0x77, 0x32, 0x3a, 0x7b, 0x95, 0xf9, 0x45, 0xce, 0x39, 0xbc, 0xfe, 0xe2,
	0xea, 0xef, 0xaa, 0x45, 0x18, 0x0f, 0x2a, 0x6d, 0xd7, 0xfc, 0x14, 0x60, 0xc7, 0xb8, 0x2b, 0x62,
	0x08, 0x4b, 0x32, 0x46, 0x3c, 0x74, 0x50, 0xb7, 0x3d, 0xbf, 0x02, 0xb6, 0x36, 0xa4, 0x33, 0x7a,
	0x28, 0x8c, 0x25, 0xfd, 0xb5, 0xa9, 0x09, 0x01, 0x82, 0xb5, 0xfa, 0xa1, 0xaa, 0x27, 0xb6, 0x87,
	0x6f, 0xe0, 0x60, 0xe1, 0x2e, 0xe9, 0x00, 0xe6, 0x21, 0xc2, 0x74, 0x59, 0xe9, 0x52, 0xc8, 0x5e,
	0xf3, 0xcf, 0x6f, 0xe0, 0x70, 0x21, 0x4a, 0x9a, 0x3f, 0x0a, 0xa5, 0x48, 0xf6, 0xa7, 0x2c, 0x6f,
	0x96, 0xe9, 0x37, 0xb6, 0x87, 0x21, 0x8c, 0xae, 0xd3, 0x15, 0xf3, 0x70, 0x1f, 0xc2, 0xcf, 0x2a,
	0xd7, 0x55, 0x91, 0x33, 0x1f, 0x23, 0x18, 0xdf, 0x5d, 0xdf, 0xa5, 0x6c, 0xe4, 0x56, 0xe9, 0xed,
	0x6d, 0xca, 0x46, 0x89, 0xcf, 0xbc, 0x8f, 0xbf, 0x3c, 0x08, 0x17, 0x9a, 0xc8, 0x92, 0xc6, 0x4b,
	0x88, 0x56, 0xa2, 0x69, 0x9f, 0x82, 0xf1, 0x6c, 0xd0, 0xc8, 0xe1, 0x0f, 0x24, 0x47, 0x2f, 0x38,
	0xee, 0xdd, 0x97, 0x10, 0xfc, 0xf9, 0x69, 0x7c, 0x37, 0x24, 0x9e, 0xb5, 0x23, 0x39, 0x7e, 0xc9,
	0x72, 0xe9, 0x2b, 0x98, 0xf4, 0x9d, 0xc6, 0xf7, 0xff, 0x50, 0xcf, 0x06, 0x26, 0x49, 0xfe, 0xe3,
	0xd6, 0xb2, 0xb9, 0x0f, 0xda, 0x99, 0xfb, 0xf4, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x3b, 0x25,
	0xb2, 0x8a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// send a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	//rpc Login(LoginRequest) returns (LoginReply);
	CanSet(ctx context.Context, in *CanSetRequest, opts ...grpc.CallOption) (*CanSetReply, error)
	CanUpdate(ctx context.Context, in *CanUpdateRequest, opts ...grpc.CallOption) (*CanUpdateReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/helloworld.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CanSet(ctx context.Context, in *CanSetRequest, opts ...grpc.CallOption) (*CanSetReply, error) {
	out := new(CanSetReply)
	err := c.cc.Invoke(ctx, "/helloworld.Greeter/CanSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CanUpdate(ctx context.Context, in *CanUpdateRequest, opts ...grpc.CallOption) (*CanUpdateReply, error) {
	out := new(CanUpdateReply)
	err := c.cc.Invoke(ctx, "/helloworld.Greeter/CanUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// send a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	//rpc Login(LoginRequest) returns (LoginReply);
	CanSet(context.Context, *CanSetRequest) (*CanSetReply, error)
	CanUpdate(context.Context, *CanUpdateRequest) (*CanUpdateReply, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedGreeterServer) CanSet(ctx context.Context, req *CanSetRequest) (*CanSetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanSet not implemented")
}
func (*UnimplementedGreeterServer) CanUpdate(ctx context.Context, req *CanUpdateRequest) (*CanUpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanUpdate not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CanSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CanSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter/CanSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CanSet(ctx, req.(*CanSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CanUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CanUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter/CanUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CanUpdate(ctx, req.(*CanUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
		{
			MethodName: "CanSet",
			Handler:    _Greeter_CanSet_Handler,
		},
		{
			MethodName: "CanUpdate",
			Handler:    _Greeter_CanUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/helloworld.proto",
}
